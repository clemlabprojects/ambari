{#
 # Licensed to the Apache Software Foundation (ASF) under one
 # or more contributor license agreements.  See the NOTICE file
 # distributed with this work for additional information
 # regarding copyright ownership.  The ASF licenses this file
 # to you under the Apache License, Version 2.0 (the
 # "License"); you may not use this file except in compliance
 # with the License.  You may obtain a copy of the License at
 #
 #   http://www.apache.org/licenses/LICENSE-2.0
 #
 # Unless required by applicable law or agreed to in writing, software
 # distributed under the License is distributed on an "AS IS" BASIS,
 # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 # See the License for the specific language governing permissions and
 # limitations under the License.
 #}
{
  "input":[
    {
      "type":"logsearch_app",
      "rowtype":"service",
      "path":"{{default('/configurations/logsearch-env/logsearch_log_dir', '/var/log/ambari-logsearch-portal')}}/logsearch.json"
    },
    {
      "type":"logsearch_feeder",
      "rowtype":"service",
      "path":"{{default('/configurations/logfeeder-env/logfeeder_log_dir', '/var/log/ambari-logsearch-logfeeder')}}/logsearch-logfeeder.json"
    },
    {
      "type":"logsearch_feeder_log",
      "rowtype":"service",
      "path":"{{default('/configurations/logfeeder-env/logfeeder_log_dir', '/var/log/ambari-logsearch-logfeeder')}}/logfeeder.out"
    },
    {
      "type":"logsearch_log",
      "rowtype":"service",
      "path":"{{default('/configurations/logfeeder-env/logfeeder_log_dir', '/var/log/ambari-logsearch-logfeeder')}}/logsearch.out"
    },
    {
      "type":"logsearch_perf",
      "rowtype":"service",
      "path":"{{default('/configurations/logsearch-env/logsearch_log_dir', '/var/log/ambari-logsearch-portal')}}/logsearch-performance.json"
    }
  ],
  "filter":[
    {
      "filter":"json",
      "conditions":{
        "fields":{
          "type":[
            "logsearch_app",
            "logsearch_feeder",
            "logsearch_perf"
          ]

        }

      }

    },
    {
      "filter": "grok",
      "conditions": {
          "fields": {
              "type": [
                  "logsearch_feeder_log",
                  "logsearch_log"
              ]
          }
      },
      "skipOnError": false,
      "deepExtract": false,
      "post_map_values": {
          "logtime": [
              {
                  "map_date": {
                      "target_date_pattern": "yyyy-MM-dd HH:mm:ss,SSS"
                  }
              }
          ]
      },
      "log4j_format": "%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n",
      "multiline_pattern": "^(%{TIMESTAMP_ISO8601:logtime})",
      "message_pattern": "(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}\\[%{DATA:thread}\\]%{SPACE}%{LOGLEVEL:level}%{SPACE}%{JAVACLASS:logger_name}%{SPACE}\\(%{JAVAFILE:file}:%{INT:line_number}\\)%{SPACE}-%{SPACE}%{GREEDYDATA:log_message}"
        }
    ]

}